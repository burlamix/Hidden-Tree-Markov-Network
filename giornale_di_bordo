
SERVER
leva import e py
setta dove stampare i file
decidi accuracy o loss

SETTA IL DATABASE

e le classi


-----------------------------------------------------------------------------------------------------
TEST DEL 7 :
fissi M = 30 e HS = 10

vario LR = 0.01 , 0.001, 0.0001,  exponentia decading rate = -6 -3 

m=30 hidden_state = 10 lerning_rate=0.01 decay=1e-3 epoche = 35 batch_size = 32

tti_01_e6 pid 153612

partenza ore 14::
-----------------------------------------------------------------------------------------------------
TEST DELL 8
fissi M = 30 e HS = 10

rms_01_e0
provo RMS con learning rata che si gira da solo , e LR fisso per theta dei mattoni
rms_01_e6
provo RMS con learning rata che si gira da solo , e LR esponenziale per mattoni

Adadeltaq
provo Adadelta  , e LR fisso per theta dei mattoni

____---------------------------------------------------------------------------------
test del 9

NOTA BENE 6 E 3 SONO INVERTITI
b1_01_e6
tutto training ed test
nohup time python main.py > s_1000_b1_01_e3.txt &			
nohup time python main.py > s_1000_b1_001_e3.txt &



s_1000_b1_01_e6
s_1000_b1_001_e6
s_1000_b1_01_e3
s_1000_b1_001_e3
---------
9 sera
nohup time python main.py > new_900_b1_01_e6.txt & test su tutto inex batch 32
nohup time python main.py > new_900_b1_01_e6_32.txt & test su tutto inex batch  che è con la batch da 1 invece....


-10--------------------------------------


m=30
hidden_state = 8lerning_rate=0.01decay=1e-6epoche = 15batch_size = 32stop_n = 5
tutto

hope_15
hope_30
hope_30_rms
----10 sera
	NO NERSTEROV!
hidden_state = 11 lerning_rate=0.01 decay=1e-6 epoche = 12 batch_size = 32  stop_n = 5    33

last_10_sdg_b1_001
last_10_rms_b1_001
last_10_sdg_b1_01
last_10_rms_b1_01



nohup time python main.py > last_10_rms_b1_01.txt &

-------------------11--------------------------

questi li ho fatto con la lista nodi interni di E e non di EE !!!!

test classi invertite e non su 3 classi serie
nohup time python main.py > 3_15_b32_01.txt &

_______test prof

tutto con validation batch = 1
tt_cv_b1_01

nohup time python main.py > tt_cv_b1_01.txt &
_______
tutto traning tutto test
inv ed non inv

con fold e test su tutto
3_17_b32_inv
___________________________________sabato notte alle 2

3 validation fit

nohup time python main.py > 3_b1_no.txt &

con batch da 32
nohup time python main.py > 3_b32_inv.txt &

nohup time python main.py > 3_b1_inv.txt &

con test on batch come fun 
nohup time python main.py > 3_b1_inv_b.txt &

nohup time python main.py > 3_b32_inv_b.txt &

tutto il sataset con una val con fit 15 epoche
tutto il set 
nohup time python main.py > ts_b1_inv_.txt &
nohup time python main.py > ts_b32_inv.txt &

----------------------------------- risolto problema nel calcolo del parametro A


nohup time python main.py > 3_vl_b32_01.txt &


nohup time python main.py > 3f_vl_b32_01.txt &


con la 24 cambiate e senza uniform
nohup time python main.py > 3_24c_b32_01.txt &
nohup time python main.py > 3f_24c_b32_01.txt &

come prima am batch da uno e sulla quindici sommo sugli E

nohup time python main.py > 3_24c_b1_01.txt &
nohup time python main.py > 3f_24c_b1_01.txt &

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||>>>>>>>>>>>>>LA SVOLTA<<<<<<<<<<<<<
nohup time python main.py > .txt &

M=40
bt = 32
hs = 10
deca = 10^-6
stop = 5
lr = 0.01


nohup time python main.py > hope_tt_b32_ep15_lr_01.txt &
nohup time python main.py > hope_tt_b32_ep15_lr_001.txt &



nohup time python main.py > hope_tt_b32_ep30_lr_01.txt &
nohup time python main.py > hope_tt_b32_ep30_lr_001.txt &

nohup time python main.py > hope_tt_b1_ep15_lr_01.txt &




nohup time python main.py > hope_tv_b32_ep20_lr_01.txt &
nohup time python main.py > hope_tv_b32_ep25_lr_001.txt &
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||---13 sera

13s tredici sera

nohup time python main.py > 13s_tt_b64_ep20_lr_001.txt &   kk
nohup time python main.py > 13s_tt_b128_ep20_lr_001.txt &   kk
nohup time python main.py > 13s_tt_b536_ep20_lr_001.txt &   kk


nohup time python main.py > 13s_tt_b1_ep25_lr_0001.txt &--------------------------
nohup time python main.py > 13s_tt_b64_ep20_lr_0001.txt &    kk
nohup time python main.py > 13s_tt_b536_ep25_lr_0001.txt & in realtà 20   kk



con batch invece che fit
nohup time python main.py > 13s_bb_tt_b128_ep20_lr_001.txt & KK
con la 24 come era prima
nohup time python main.py > 13s_24_tt_b128_ep20_lr_001.txt &KK

migliorando prior e si spera un po di velocità!!
nohup time python main.py > 13sp_tt_b128_ep20_lr_001.txt &KK




e questo come il vecchio ma avendo cambiato i node prior
27 in rwaltà e stop ad 8
nohup time python main.py > 13s60_tt_b1_ep25_lr_01.txt &kk
nohup time python main.py > 13s_tt_b1_ep25_lr_001.txt &kk
nohup time python main.py > 13s_tt_b1_ep25_lr_0005.txt &kk
nohup time python main.py > 13s_tt_b1_ep25_lr_0001.txt &


nohup time python main.py > 13s24_tt_b1_ep25_lr_001.txt &

uniformata e invertita
nohup time python main.py > 13s24b_tt_b1_ep25_lr_001.txt &

nohup time python main.py > 13s60_tt_b1_ep25_lr_001.txt &



||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| effettuato un cambio suulla 24 sperando che sia definitivo.


nohup time python main.py > 14m_tt_b1_ep25_lr_01.txt &
nohup time python main.py > 14m_tt_b1_ep25_lr_001.txt &
nohup time python main.py > 14m_tt_b1_ep25_lr_0001.txt &


---------------------------------------------------------saltato per ora   nohup time python main.py > 14m_tv_b1_ep25_lr_01.txt &
nohup time python main.py > 14m_tv_b1_ep25_lr_001.txt &



#vecchio U uniformata F filled
nohup time python main.py > 14m_uf_tt_b1_ep25_lr_001.txt &

nohup time python main.py > 14m_u_tt_b1_ep25_lr_001.txt &

# solo filled

nohup time python main.py > 14m_f_tt_b1_ep25_lr_001.txt &
